G:\MICROS_1\LAB_07\RTI_7SEG_LED_COUNTER.lst - generated by MGTEK Assembler ASM12 V1.26 Build 144 for WIN32 (x86) - Wed Dec 03 00:46:03 2008

    1:                                 ;*********************************************************************
    2:                                 ; Jacob S. Howarth
    3:                                 ; Microcomputers I, Fall '08
    4:                                 ; Prof. Foster
    5:                                 ; 
    6:                                 ; Description: This program uses an RTI to create a counter
    7:                                 ;              that interupts a custom number of times per second 
    8:                                 ;              displaying the counters value, in ASCII, on
    9:                                 ;              the 7-segment displays as well as in binary
   10:                                 ;              using the LED's.
   11:                                 ;
   12:                                 ; Inputs: 1) Switches SW5, SW4, SW3, SW2 - PTH pin [0:3].
   13:                                 ; 
   14:                                 ; Outputs: 1) 7-segment display - PortB all pins [0:7]
   15:                                 ;             All 7-segement displays enabled - PTP pin [0:3].     
   16:                                 ;          2) 8-LED's - PTJ pin 1 cleared to output PortB values.
   17:                                 ;
   18:                                 ;
   19:                                 ; Dependant files: 7segment.s19 file used as 7-segment display
   20:                                 ;                  driver.
   21:                                 ;*********************************************************************
   22:                                 
   23:                                 ; Define I/O address constants
   24:                                 
   25:                                 ; PortB constants
   26:          =00000001              PortB   EQU     $0001
   27:          =00000003              DDRB    EQU     $0003
   28:                                 
   29:                                 ; PTH constants
   30:          =00000260              PTH     EQU     $0260
   31:          =00000262              DDRH    EQU     $0262
   32:                                 
   33:                                 ; PTP constants
   34:          =00000258              PTP     EQU     $0258
   35:          =0000025A              DDRP    EQU     $025A
   36:                                 
   37:                                 ; PTJ constants
   38:          =00000268              PTJ     EQU     $0268
   39:          =0000026A              DDRJ    EQU     $026A
   40:                                 
   41:                                 ; PTH edge-triggered, interupt enable (PIEH) and interupt flag (PIFH) constants
   42:          =00000266              PIEH    EQU     $0266
   43:          =00000267              PIFH    EQU     $0267
   44:                                 
   45:                                 ; RTI (real time interupt) interupt enable (RTIE), interupt flag (RTIF), clock reset and
   46:                                 ; generation enable (CRGINT) and flag (CRGFLG), and real time controller (RTICTL) constants
   47:          =00000037              CRGFLG  EQU     $0037
   48:          =00000080              RTIF    EQU     %10000000
   49:          =00000038              CRGINT  EQU     $0038
   50:          =00000080              RTIE    EQU     %10000000
   51:          =0000003B              RTICTL  EQU     $003B
   52:                                 
   53:                                 ; 7segment.s19 initialization and digit display subroutine addresses.
   54:          =00002800              INIT7SEG        EQU     $2800
   55:          =00002880              DIGIT           EQU     $2880
   56:                                 
   57:                                 ; 7segment.s19 subroutine parameters that specify which 7-segment displays to
   58:                                 ; turn on and off in DIGIT subroutine.
   59:          =00000001              DIG1    EQU     %00000001 ; left digit
   60:          =00000002              DIG2    EQU     %00000010 ; 2nd from left
   61:          =00000004              DIG3    EQU     %00000100 ; 2nd from right
   62:          =00000008              DIG4    EQU     %00001000 ; right digit
   63:                                 
   64:                                 ; Switches SW5, SW4, SW3, and SW2 constants.
   65:          =00000001              SW5     EQU     %00000001 ; SW5 = PTH pin 0
   66:          =00000002              SW4     EQU     %00000010 ; SW4 = PTH pin 1
   67:          =00000004              SW3     EQU     %00000100 ; SW3 = PTH pin 2
   68:          =00000008              SW2     EQU     %00001000 ; SW2 = PTH pin 
   69:                                 
   70:                                 ; Number of times to interupt per second.
   71:          =00000117              ONESEC  EQU     279
   72:                                 
   73:          =00001000                              ORG     $1000
   74:                                                 ; create storage for the patterns for
   75:                                                 ; each digit
   76:     1000 +0001                  DIGIT1          DS.B    1
   77:     1001 +0001                  DIGIT2          DS.B    1
   78:     1002 +0001                  DIGIT3          DS.B    1
   79:     1003 +0001                  DIGIT4          DS.B    1
   80:     1004 +0001                  RTICOUNT        DS.B    1       ; tracks number of interrupts           
   81:                                 
   82:                                                 ; define the interrupt vectors
   83:          =00003E70                              ORG     $3E70
   84:     3E70 20B8                                   DC.W    RTIISR
   85:                                 
   86:          =00003E4C                              ORG     $3E4C
   87:     3E4C 206B                                   DC.W    PTHISR
   88:                                                 
   89:                                                 
   90:                                 
   91:                                 ;**************** MAIN PROGRAM START ***************
   92:          =00002000                              ORG     $2000
   93:     2000 CF 3600                                LDS #$3600
   94:     2003 16 2800                                JSR INIT7SEG    ; Configure the 7-segment display
   95:                                                 
   96:                                                 ; configure/enable SW5, SW4, SW3, SW2 interrupt (portH)
   97:     2006 180B 00 0260                           MOVB    #$00,PTH
   98:     200B 180B 0F 0266                           MOVB    #(SW2 + SW3 + SW4 + SW5), PIEH
   99:                                                 
  100:                                                 ; configure/enable the 8-LED's
  101:     2010 180B 02 026A                           MOVB    #$02,DDRJ
  102:     2015 1D 0268 02                             BCLR    PTJ,%00000010
  103:                                 
  104:                                                 ; configure RTI device          
  105:     2019 1803 0117 1004                         MOVW    #ONESEC,RTICOUNT
  106:     201F 180B 36 003B                           MOVB    #$36,RTICTL
  107:     2024 4C 38 80                               BSET    CRGINT,RTIE     
  108:                                 
  109:                                                 ; initialize the display to 0's
  110:     2027 180B 30 1000                           MOVB    #$30,DIGIT1
  111:     202C 180B 30 1001                           MOVB    #$30,DIGIT2
  112:     2031 180B 30 1002                           MOVB    #$30,DIGIT3
  113:     2036 180B 30 1003                           MOVB    #$30,DIGIT4
  114:                                                 ; unmask interrupts...
  115:     203B 10EF                                   CLI             
  116:                                                 ; and wait for things to happen
  117:                                 
  118:     203D F6 1000                Loop            LDAB    DIGIT1
  119:     2040 86 01                                  LDAA    #DIG1
  120:     2042 16 2880                                JSR     DIGIT
  121:     2045 16 210A                                JSR     pause
  122:                                 
  123:     2048 F6 1001                                LDAB    DIGIT2
  124:     204B 86 02                                  LDAA    #DIG2
  125:     204D 16 2880                                JSR     DIGIT
  126:     2050 16 210A                                JSR     pause
  127:                                 
  128:     2053 F6 1002                                LDAB    DIGIT3
  129:     2056 86 04                                  LDAA    #DIG3
  130:     2058 16 2880                                JSR     DIGIT
  131:     205B 16 210A                                JSR     pause
  132:                                 
  133:     205E F6 1003                                LDAB    DIGIT4
  134:     2061 86 08                                  LDAA    #DIG4
  135:     2063 16 2880                                JSR     DIGIT
  136:     2066 16 210A                                JSR     pause
  137:     2069 20 D2                                  BRA     Loop
  138:                                 
  139:                                 ;****************************************************************
  140:                                 ;Subroutine: PTHISR
  141:                                 ;Description: Checks each button to identify which one is pressed
  142:                                 ;             It then adjusts the coefficient and exponent of the
  143:                                 ;             real time interupt controller (RTICTL) according
  144:                                 ;             to the assoc. button pressed.
  145:                                 ;
  146:                                 ;Parameters: Register's A, B, X, Y, CCR. and PC are pushed on
  147:                                 ;            the stack during interupt calls.
  148:                                 ;
  149:                                 ;Returns: Register's A, B, X, Y, CCR, and RTI return address to
  150:                                 ;         be stored back into the PC are pulled off the stack.
  151:                                 ;****************************************************************
  152:     206B 1F 0267 01 0E          PTHISR          BRCLR   PIFH,SW5,PTHSW4
  153:     2070 1C 0267 01                             BSET    PIFH,SW5 ; Clear the interupt flag bit by sending a 1 to the interupt device.
  154:                                                                  ; This indicates the device has been serviced.
  155:     2074 4E 3B 70 06                            BRSET   RTICTL,%01110000,PTHSW4
  156:     2078 96 3B                                  LDAA    RTICTL
  157:     207A 8B 10                                  ADDA    #$10
  158:     207C 5A 3B                                  STAA    RTICTL
  159:                                 
  160:     207E 1F 0267 02 0E          PTHSW4          BRCLR   PIFH,SW4,PTHSW3
  161:     2083 1C 0267 02                             BSET    PIFH,SW4
  162:     2087 4F 3B E0 06                            BRCLR   RTICTL,%11100000,PTHSW3
  163:     208B 96 3B                                  LDAA    RTICTL
  164:     208D 80 10                                  SUBA    #$10
  165:     208F 5A 3B                                  STAA    RTICTL
  166:                                 
  167:     2091 1F 0267 04 0E          PTHSW3          BRCLR   PIFH,SW3,PTHSW2
  168:     2096 1C 0267 04                             BSET    PIFH,SW3
  169:     209A 4E 3B 0F 06                            BRSET   RTICTL,%00001111,PTHSW2
  170:     209E 96 3B                                  LDAA    RTICTL
  171:     20A0 8B 01                                  ADDA    #$01
  172:     20A2 5A 3B                                  STAA    RTICTL
  173:                                 
  174:     20A4 1F 0267 08 0E          PTHSW2          BRCLR   PIFH,SW2,PTHISREND
  175:     20A9 1C 0267 08                             BSET    PIFH,SW2
  176:     20AD 4F 3B 0F 06                            BRCLR   RTICTL,%00001111,PTHISREND
  177:     20B1 96 3B                                  LDAA    RTICTL
  178:     20B3 80 01                                  SUBA    #$01
  179:     20B5 5A 3B                                  STAA    RTICTL
  180:                                 
  181:     20B7 0B                     PTHISREND       RTI
  182:                                 
  183:                                 ;****************************************************************
  184:                                 ;Subroutine: RTIISR
  185:                                 ;Description: Checks each button to identify which on is pressed
  186:                                 ;
  187:                                 ;
  188:                                 ;
  189:                                 ;Parameters: Register's A, B, X, Y, CCR. and PC are pushed on
  190:                                 ;            the stack during interupt calls.
  191:                                 ;
  192:                                 ;Returns: Register's A, B, X, Y, CCR, and RTI return address to
  193:                                 ;         be stored back into the PC are pulled off the stack.
  194:                                 ;****************************************************************
  195:     20B8 4F 37 80 45            RTIISR          BRCLR   CRGFLG,RTIF,RTIEND
  196:     20BC 86 80                                  LDAA    #RTIF
  197:     20BE 5A 37                                  STAA    CRGFLG
  198:                                                 
  199:     20C0                        CHKINC          ; count interrupt for incrementing the display
  200:     20C0 FC 1004                                LDD     RTICOUNT
  201:     20C3 83 0001                                SUBD    #1
  202:     20C6 7C 1004                                STD     RTICOUNT
  203:     20C9 26 36                                  BNE     RTIEND
  204:     20CB 1803 0117 1004                         MOVW    #ONESEC,RTICOUNT
  205:                                                 ; increment display as a 4-digit value
  206:     20D1 F6 1003                                LDAB    DIGIT4
  207:     20D4 16 2102                                JSR     INCASCII
  208:     20D7 7B 1003                                STAB    DIGIT4
  209:     20DA C1 30                                  CMPB    #$30
  210:     20DC 26 23                                  BNE     RTIEND
  211:                                 
  212:     20DE F6 1002                                LDAB    DIGIT3
  213:     20E1 16 2102                                JSR     INCASCII
  214:     20E4 7B 1002                                STAB    DIGIT3
  215:     20E7 C1 30                                  CMPB    #$30
  216:     20E9 26 16                                  BNE     RTIEND
  217:                                 
  218:     20EB F6 1001                                LDAB    DIGIT2
  219:     20EE 16 2102                                JSR     INCASCII
  220:     20F1 7B 1001                                STAB    DIGIT2
  221:     20F4 C1 30                                  CMPB    #$30
  222:     20F6 26 09                                  BNE     RTIEND
  223:                                 
  224:     20F8 F6 1000                                LDAB    DIGIT1
  225:     20FB 16 2102                                JSR     INCASCII
  226:     20FE 7B 1000                                STAB    DIGIT1
  227:     2101 0B                     RTIEND          RTI
  228:                                 
  229:                                 ;****************************************************************
  230:                                 ;Subroutine: INCASCII
  231:                                 ;Description: Increments an ASCII digit and wraps the value 
  232:                                 ;             from 9 to 0.
  233:                                 ;
  234:                                 ;Parameters: Register's B
  235:                                 ;
  236:                                 ;Returns: Nothing
  237:                                 ;****************************************************************
  238:     2102 52                     INCASCII        INCB
  239:     2103 C1 3A                                  CMPB    #$3A
  240:     2105 26 02                                  BNE     ENDINC
  241:     2107 C6 30                                  LDAB    #$30
  242:     2109 3D                     ENDINC          RTS
  243:                                 
  244:                                 ;*******************************************************************
  245:                                                 ; pause for ~0.1 ms
  246:     210A CE 0258                pause           ldx     #600
  247:     210D 09                     loopp           dex
  248:     210E 26 FD                                  bne     loopp
  249:     2110 3D                                     rts     

Symbols:
crgflg                          *00000037
crgint                          *00000038
ddrj                            *0000026a
dig1                            *00000001
dig2                            *00000002
dig3                            *00000004
dig4                            *00000008
digit                           *00002880
digit1                          *00001000
digit2                          *00001001
digit3                          *00001002
digit4                          *00001003
endinc                          *00002109
incascii                        *00002102
init7seg                        *00002800
loop                            *0000203d
loopp                           *0000210d
onesec                          *00000117
pause                           *0000210a
pieh                            *00000266
pifh                            *00000267
pth                             *00000260
pthisr                          *0000206b
pthisrend                       *000020b7
pthsw2                          *000020a4
pthsw3                          *00002091
pthsw4                          *0000207e
ptj                             *00000268
rticount                        *00001004
rtictl                          *0000003b
rtie                            *00000080
rtiend                          *00002101
rtif                            *00000080
rtiisr                          *000020b8
sw2                             *00000008
sw3                             *00000004
sw4                             *00000002
sw5                             *00000001

