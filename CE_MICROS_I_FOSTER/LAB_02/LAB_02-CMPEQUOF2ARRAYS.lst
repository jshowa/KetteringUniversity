E:\MICROS_1\LAB_02\LAB_02-CMPEQUOF2ARRAYS.lst - generated by MGTEK Assembler ASM12 V1.26 Build 144 for WIN32 (x86) - Tue Oct 28 17:25:00 2008

    1:                                      ****************************************************************************************
    2:                                      * Jacob S. Howarth
    3:                                      * Microcomputers I - Lab 2
    4:                                      * CE 320, Fall 2008 
    5:                                      * Prof. Foster 
    6:                                      *
    7:                                      * Description - This program compares two arrays, position by position, to see if they
    8:                                      * are identical. It returns a value $FF if identical, $00 if not. Arrays of zero length
    9:                                      * are considered identical.
   10:                                      ****************************************************************************************
   11:                                      
   12:          =000000FF                   TRUE            EQU $FF         ; Constant value representing true.
   13:          =00000000                   FALSE           EQU $00         ; Constant value representing false.
   14:                                      
   15:                                      
   16:          =00001000                                   ORG $1000
   17:     1000 3000                        ARRAY1          DC.W $3000      ; Store the address of the first element in the first array.
   18:                                                                      ; Address $1000 acts as a pointer to data in the first array.
   19:     1002 3004                        ARRAY2          DC.W $3004      ; Store the address of the first element in the second array.
   20:                                                                      ; Address $1002 acts as a pointer to the first element in the second array. 
   21:     1004 0000                        LENGTH          DC.W $0000      ; The length of each array is 4 values.
   22:                                      
   23:          =00003000                                   ORG $3000
   24:     3000 12 22 33 44                                 DC.B $12,$22,$33,$44    ; Initialize data in first array
   25:          =00003004                                   ORG $3004
   26:     3004 12 22 33 44                                 DC.B $12,$22,$33,$44    ; Initialize data in second array
   27:                                      
   28:          =00002000                                   ORG $2000
   29:     2000 FE 1000                [03]                 LDX ARRAY1      ; Load X with value 3000
   30:     2003 FD 1002                [03]                 LDY ARRAY2      ; Load Y with value 3004
   31:     2006 86 FF                  [01]                 LDAA #TRUE      ; Assume that both arrays are identical by storing true in $1006 
   32:     2008 7A 1006                [03]                 STAA $1006
   33:     200B FC 1004                [03]                 LDD LENGTH      ; Load D with length and store temporarily in address $1011.
   34:     200E 7C 1011                [03]                 STD $1011
   35:     2011 27 18                  [03] LOOP            BEQ DONE        ; Exit program if array length is zero. This is also exiting
   36:                                                                      ; with the value TRUE for the arrays, signifying that arrays
   37:                                                                      ; with zero length are identical
   38:                                                                      
   39:     2013 A6 00                  [03]                 LDAA 0,X        ; Compare position 1 of the first array to position 2 of the second. 
   40:     2015 A1 40                  [03]                 CMPA 0,Y        ; If they aren't equal (Z = 0), branch to label FALSE.
   41:     2017 26 0D                  [03]                 BNE NOT_IDENTICAL       
   42:                                      
   43:     2019 08                     [01]                 INX             ; Else, increment X and Y to point to the second elements in the array
   44:     201A 02                     [01]                 INY
   45:     201B FC 1011                [03]                 LDD $1011       ; Load length into D and decrement the length by 1. This controls the loop.
   46:     201E 83 0001                [02]                 SUBD #1
   47:     2021 7C 1011                [03]                 STD $1011
   48:     2024 20 EB                  [03]                 BRA LOOP
   49:     2026 C6 00                  [01] NOT_IDENTICAL   LDAB #FALSE     ; If arrays are not equal, store a value of FALSE, signifying they aren't identical.
   50:     2028 7B 1006                [03]                 STAB $1006
   51:     202B 3F                     [09] DONE            SWI             ; End program.
   52:                                                      

Symbols:
array1                          *00001000
array2                          *00001002
done                            *0000202b
false                           *00000000
length                          *00001004
loop                            *00002011
not_identical                   *00002026
true                            *000000ff

