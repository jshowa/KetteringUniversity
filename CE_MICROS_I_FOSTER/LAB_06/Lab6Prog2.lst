E:\MICROS_1\LAB_06\Lab6Prog2.lst - generated by MGTEK Assembler ASM12 V1.26 Build 144 for WIN32 (x86) - Tue Nov 18 09:43:52 2008

    1:                                      ;************************************************************
    2:                                      ; Names:        Prof. Foster
    3:                                      ; Last Modified:08-25-2008
    4:                                      ; Purpose:      Illuminate one LED in each digit of the 7-segment 
    5:                                      ;               display at a time
    6:                                      ;
    7:                                      ; Inputs:       Switch SW2 - PTH pin 3
    8:                                      ;               Switch SW3 - PTH pin 2
    9:                                      ;               Switch SW4 - PTH pin 1
   10:                                      ;               Switch SW5 - PTH pin 0
   11:                                      ;
   12:                                      ; Outputs:      7-segment diplay - PortB all pins
   13:                                      ;               digit enable       PTP pins 3-0
   14:                                      ;
   15:                                      ;************************************************************
   16:                                      
   17:                                      ;*** Constants section
   18:                                      
   19:          =00000001                   PORTB           EQU             $0001
   20:          =00000003                   DDRB            EQU             $0003
   21:          =00000260                   PTH             EQU             $0260
   22:          =00000262                   DDRH            EQU             $0262
   23:          =00000258                   PTP             EQU             $0258
   24:          =0000025A                   DDRP            EQU             $025A
   25:                                      
   26:                                      ; declare the bit pattern to enable each digit separately
   27:          =0000000E                   DIGIT0          EQU             %00001110
   28:          =0000000D                   DIGIT1          EQU             %00001101
   29:          =0000000B                   DIGIT2          EQU             %00001011
   30:          =00000007                   DIGIT3          EQU             %00000111
   31:                                      
   32:                                      ; declare patterns that will examine each puch button separately
   33:          =00000008                   SW2             EQU             %00001000
   34:          =00000004                   SW3             EQU             %00000100
   35:          =00000002                   SW4             EQU             %00000010
   36:          =00000001                   SW5             EQU             %00000001
   37:                                      
   38:                                      
   39:          =00001000                                   ORG     $1000
   40:                                                      ; create storage for the patterns for
   41:                                                      ; each digit
   42:     1000 +0001                       DIG0            DS.B    1
   43:     1001 +0001                       DIG1            DS.B    1
   44:     1002 +0001                       DIG2            DS.B    1
   45:     1003 +0001                       DIG3            DS.B    1
   46:                                                      ; space to store the previous button values
   47:     1004 +0001                       LAST            DS.B    1
   48:                                      
   49:          =00002000                                   ORG     $2000
   50:     2000 CF 3600                [02]                 LDS     #$3600
   51:                                                      ; init PortB to all outputs
   52:     2003 180B FF 0003           [04]                 MOVB    #%11111111, DDRB        
   53:                                                      ; init PTP to all outputs
   54:     2008 180B FF 025A           [04]                 MOVB    #%11111111, DDRP
   55:                                                      ; init PTH to all inputs
   56:     200D 180B 00 0262           [04]                 MOVB    #%00000000, DDRH
   57:                                                      ; begin with one LED segment illuminated in each digit
   58:     2012 180B 01 1000           [04]                 MOVB    #%00000001,DIG0 
   59:     2017 180B 02 1001           [04]                 MOVB    #%00000010,DIG1
   60:     201C 180B 01 1002           [04]                 MOVB    #%00000001,DIG2
   61:     2021 180B 01 1003           [04]                 MOVB    #%00000001,DIG3
   62:                                                      ; intialize all switches to unpressed
   63:     2026 180B 0F 1004           [04]                 MOVB    #$f,LAST
   64:                                      
   65:                                                      ; update digit 0
   66:     202B 180C 1000 0001         [06] d0              MOVB    DIG0,PORTB
   67:     2031 180B 0E 0258           [04]                 MOVB    #DIGIT0,PTP
   68:                                                      ;JSR    pause
   69:     2036 1E 0260 08 15          [05]                 BRSET   PTH,SW2,setsw2 ; if SW2 is now pressed...
   70:     203B 1F 1004 08 14          [05]                 BRCLR   LAST,SW2,d1    ; ...and wasn't pressed last time...
   71:     2040 1D 1004 08             [04]                 BCLR    LAST,SW2       ; ... store value and update digit
   72:     2044 78 1000                [04]                 LSL     DIG0
   73:     2047 26 0B                  [03]                 BNE     D1
   74:     2049 180B 01 1000           [04]                 MOVB    #1,DIG0
   75:     204E 20 04                  [03]                 BRA     D1
   76:     2050 1C 1004 08             [04] setsw2          BSET    LAST,sw2                
   77:                                                      ; update digit 1
   78:     2054 180C 1001 0001         [06] d1              MOVB    DIG1,PORTB
   79:     205A 180B 0D 0258           [04]                 MOVB    #DIGIT1,PTP
   80:                                                      ;JSR    pause
   81:     205F 1E 0260 04 15          [05]                 BRSET   PTH,SW3,setsw3 ; if SW3 is now pressed...
   82:     2064 1F 1004 04 14          [05]                 BRCLR   LAST,SW3,d2    ; ...and wasn't pressed last time...
   83:     2069 1D 1004 04             [04]                 BCLR    LAST,SW3       ; ... store value and update digit
   84:     206D 78 1001                [04]                 LSL     DIG1
   85:     2070 26 0B                  [03]                 BNE     D2
   86:     2072 180B 01 1001           [04]                 MOVB    #1,DIG1
   87:     2077 20 04                  [03]                 BRA     D2
   88:     2079 1C 1004 04             [04] setsw3          BSET    LAST,SW3
   89:                                      
   90:                                                      ; update digit 2
   91:     207D 180C 1002 0001         [06] d2              MOVB    DIG2,PORTB
   92:     2083 180B 0B 0258           [04]                 MOVB    #DIGIT2,PTP
   93:                                                      ;JSR    pause
   94:     2088 1E 0260 02 15          [05]                 BRSET   PTH,SW4,setsw4  ; if SW4 is now pressed...
   95:     208D 1F 1004 02 14          [05]                 BRCLR   LAST,SW4,d3     ; ...and wasn't pressed last time...
   96:     2092 1D 1004 02             [04]                 BCLR    LAST,SW4        ; ... store value and update digit
   97:     2096 78 1002                [04]                 LSL     DIG2
   98:     2099 26 0B                  [03]                 BNE     D3
   99:     209B 180B 01 1002           [04]                 MOVB    #1,DIG2
  100:     20A0 20 04                  [03]                 BRA     D3
  101:     20A2 1C 1004 02             [04] setsw4          BSET    LAST,SW4
  102:                                      
  103:                                                      ; update digit 3
  104:     20A6 180C 1003 0001         [06] d3              MOVB    DIG3,PORTB
  105:     20AC 180B 07 0258           [04]                 MOVB    #DIGIT3,PTP
  106:                                                      ;JSR    pause
  107:     20B1 1E 0260 01 15          [05]                 BRSET   PTH,SW5,setsw5  ; if SW5 is now pressed...
  108:     20B6 1F 1004 01 14          [05]                 BRCLR   LAST,SW5,repeat ; ...and wasn't pressed last time...
  109:     20BB 1D 1004 01             [04]                 BCLR    LAST,SW5        ; ... store value and update digit
  110:     20BF 78 1003                [04]                 LSL     DIG3
  111:     20C2 26 0B                  [03]                 BNE     repeat
  112:     20C4 180B 01 1003           [04]                 MOVB    #1,DIG3
  113:     20C9 20 04                  [03]                 BRA     repeat
  114:     20CB 1C 1004 01             [04] setsw5          BSET    LAST,SW5
  115:     20CF 1820 FF58              [04] repeat          LBRA    d0
  116:                                      
  117:                                      ; pause for ~0,1 ms
  118:     20D3 CE 0258                [02] pause           ldx     #600
  119:     20D6 09                     [01] loop            dex
  120:     20D7 26 FD                  [03]                 bne     loop
  121:     20D9 3D                     [05]                 rts

Symbols:
d0                              *0000202b
d1                              *00002054
d2                              *0000207d
d3                              *000020a6
ddrb                            *00000003
ddrh                            *00000262
ddrp                            *0000025a
dig0                            *00001000
dig1                            *00001001
dig2                            *00001002
dig3                            *00001003
digit0                          *0000000e
digit1                          *0000000d
digit2                          *0000000b
digit3                          *00000007
last                            *00001004
loop                            *000020d6
pause                            000020d3
portb                           *00000001
pth                             *00000260
ptp                             *00000258
repeat                          *000020cf
setsw2                          *00002050
setsw3                          *00002079
setsw4                          *000020a2
setsw5                          *000020cb
sw2                             *00000008
sw3                             *00000004
sw4                             *00000002
sw5                             *00000001

